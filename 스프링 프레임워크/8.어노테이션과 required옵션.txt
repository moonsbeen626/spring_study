
7. 어노테이션의 장점과 @Autowired

1. class

(1)program(기본) class
	void main(...)	{

		ApplicationContext context = new ClassPathXmlApplicationContext("패키지경로/setting.xml");
		ExamConsole console = context.getBean(ExamConsole .class) // ioc컨테이너에서 가지고옴. Examconsole객체의 형태와 일치하는 class찾아서 가지고 옴.
		console.print();

		List<Exam> exams = (List<Exam>) context.getBean("exams");
		for(Exam e : exams)	e출력;
		
	}

(2)NewlecExam class
	class NewlecExam implements Exam 	{
		
		private int kor, eng, math, com; //과목 설정
		
		//getter/setter생성

		//기본생성자, 모든 필드 사용하는 생성자 생성	

		@Override
		total()	{
			return kor + eng + math + com;
		}		

		
		@Override		
		avg()	{
			return total() / 4.0f; 
		}
	}

(3)InlineExamConsole class
	class InlineExamConsole implements ExamConsole 	{

		@Autowired(required = false) // 객체가 컨테이너에 없어도 null인 상태에서 진행 허용.
		@Qulifier("exam1"); 
		private Exam exam; //기본 생성자 호출하면서 바인딩. 
		
		InlineExamConsole(){}// 기본 생성자
		InlineExamConsole(Exam exam) this.exam = exam; //생성자			

		@Override
		void print()	{
			if(exam == null) // 바인딩시 문제발생.무조건 컨테이너 안에 객체가 있어야 함. 그래서 required옵션 줌.
				"total is " + 0 + " avg is " + 0 출력
			else
				"total is " + exam.total() + " avg is " + exam.agv() 출력
		}

	
		@Override
		setExam(Exam exam)	{ 
			this.exam = exam;
		}
	}

(4)GridExamConsole class
	class InlineExamConsole implements ExamConsole 	{
		private Exam exam;

		GridExamConsole(){} //기본 생성자
		GridExamConsole(Exam exam) this.exam = exam; //생성자			

		@Override
		void print()	{
			"total is " + exam.total() + " avg is " + exam.agv() 를 grid모양으로 출력
		}
		
		@Override
		set(Exam exam)	{
			this.exam = exam;
		}
	}

2. interface

(1)Exam interface
	interface Exam	{
		int total(); //총 합 반환		
		float avg(); //평균 반환
	}



(2)ExamConsole interface	
	interface ExamConsole	{
		void print();
		void set(Exam exam);
	}

3. xml

(1)setting.xml	

	<context:annotation-config /> //namespace에서 context태그 추가해 어노테이션으로 설정한 내용을 읽어올 수 있도록허용함. 자료형을 기준으로 참조할 수 있는 객체를 찾아 바인딩.

	<bean id="exam1" class="패키지경로.NewlecExam" p:kor="10" p:eng="10" p:com="30" p:math="20"></bean> 
	<bean id="exam2" class="패키지경로.NewlecExam" p:kor="10" p:eng="10" p:com="30" p:math="20"></bean>	

	<bean id="console" class="패키지경로.InlineExamConsole"></bean> 

	<util:list id=""exams" list-class="java.util.ArryList"> 
		<bean class="패키지명.NewlecExam" p:kor="1" p:eng=...></bean> 
		<ref bean="exam"></ref> 
	</util:list>
