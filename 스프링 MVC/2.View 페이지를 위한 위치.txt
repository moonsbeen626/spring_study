2. View 페이지를 위한 위치

1. controller

(1)indexController
	public class indexController implements Controller {
		@Override // 사용자 요청을 처리할 수 있는 메소드. 상속받아 구현.
		public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Eception{
			ModelAndView mv = new ModelAndView();
			mv.addObject("data", "hello"); // "data"라는 이름에 "hello"라는 값 설정 
			mv.setViewName("/WEB-INF/view/index.jsp"); // 값 설정할 뷰 이름 설정.

			return mv; //view에게 model을 전달
 		}
	}

2. xml
 
(1) WEB-INF/web.xml
	<servlet>	
		<servlet-name>dispatcher</servlet-name> //서블릿 이름 지정
		<servlet-class>org.springframework.sevlet.DispatcherServlet</setvlet-class> //디스패처 서블릿 설정
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name> //dispatcher라는 이름의 서블릿의 매핑 주소를 지정
		<url-pattern>/</url-pattern> //서블릿 매핑 위한 주소
	</servlet-mapping>

(2) WEB-INF/dispatcher-servlet.xml //서블릿 이름-servlet.xml
	<bean id="/index" class="패키지경로.indexController"></bean> //id는 요청 url의 이름, class는 컨트롤러

3. jsp

(1) WEB-INF/view/index.jsp -> index페이지를 WEB-INF/view밑으로 숨겨 사용자가 직접 요청할 수 없도록. 컨트롤러에서는 요청 가능.
	<body>
		<h1>${data}<h1>
	</body>