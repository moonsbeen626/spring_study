6. 페이지 모듈 분리 with Tiles

1. controller

(1)indexController
	indexController implements Controller {
		@Override 
		public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Eception{
			ModelAndView mv = new ModelAndView("index"); 
			mv.addObject("data", "hello"); 

			return mv;
 		}
	}

(2) ListController	
	ListController implements Controller {
		@Override	
		public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Eception{
			ModelAndView mv = new ModelAndView("notice.list"); //tiles와 매핑되도록 이름을 notice/list -> notice.list 로변경
			mv.addObject("data", "hello"); 
			return mv;
 		}
	}

(3) DetailController	
	DetailController implements Controller {
		@Override	
		public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Eception{
			ModelAndView mv = new ModelAndView("notice.detail"); //tiles와 매핑되도록 이름을 변경
			mv.addObject("data", "hello"); 
			return mv;
 		}
	}

2. xml
 
(1) WEB-INF/web.xml
	<servlet>	
		<servlet-name>dispatcher</servlet-name> 
		<servlet-class>org.springframework.sevlet.DispatcherServlet</setvlet-class> 
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name> 
		<url-pattern>/</url-pattern>
	</servlet-mapping>

(2) WEB-INF/dispatcher-servlet.xml
	<bean id="/index" class="패키지경로.indexController"></bean> 
	<bean id="/notice/list" class="패키지경로.ListController"></bean> 
	<bean id="/notice/detail" class="패키지경로.DetailController"></bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<mvc:resources location="/static/" mapping="/**"></mvc:resources> 

(3) WEB-INF/tiles.xml -> tiles지시서
	<!DOCTYPE tiles-definitions PUBLIC
      	 "-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN"
      	 "http://tiles.apache.org/dtds/tiles-config_3_0.dtd">
	<tiles-definitions>
  		<definition name="notice.list" template="/WEB-INF/view/inc/layout.jsp"> // controller에서 반환된 뷰에 매핑
    			<put-attribute name="header" value="/WEB-INF/view/inc/header.jsp" />
			<put-attribute name="body" value="/WEB-INF/view/notice/list.jsp" />
    			<put-attribute name="footer" value="/WEB-INF/view/inc/footer.jsp" />
  		</definition>
		<definition name="notice.detail" template="/WEB-INF/view/inc/layout.jsp">
			<put-attribute name="header" value="/WEB-INF/view/inc/header.jsp" />
			<put-attribute name="body" value="/WEB-INF/view/notice/detail.jsp" />
    			<put-attribute name="footer" value="/WEB-INF/view/inc/footer.jsp" />
		</definition>
	</tiles-definitions>

3. jsp

(1) WEB-INF/view
	1. /index.jsp 
		<body>
			<!--<header id="header"> //이 부분을 공통 모듈로 사용.
				<h1>공통 헤더 부분</h1>
			</header>-->
	
			<nav id ="member-menu" class="linear-layout">
				<h1 class="hidden">공지사항</h1>
				<ul class="linear-layout">
					<li><a href="/notice/list"></a> 
				</ul>
			</nav>
			
			<!--<footer id="footer">
				<h1>공통 footer부분</h1>
			</footer>-->
		</body>
	
	2. /notice
		1) /list.jsp -> main으로 모듈화. 필요한 부분 제외하고 모두 잘라내기
			<main class="main">
				<div class="notice margon-top">
					<h3 class="hidden">공지사항 목록</h3>
					<table class="table">
						<thead>
							<tr><th class="w60">번호</th>
							<th class="expand">제목</th>
							<th class="w100">작성자</th>
							<th class="w100">작성일</th>
							<th class="w60">조회수</th></tr>
						</thead>
						<tbody>
							<tr><td>8</td>
							<td class="title text-align-center"><a href="detail">스프링예제</td> //detail페이지로 이동
							<td>강의</td>
							<td>2021-01-01</td>
							<td>146</td>
						</tbody>
			</main>

		2) /detail.jsp
			<main class="main">
				<h1>detail페이지</h1>
			</main>
	3. /inc -> 공통 모듈 관리
		1) /header.jsp 	
			<header id="header"> 
				<h1>공통 헤더 부분</h1>
			</header>

		2) /footer.jsp
			<footer id="footer">
				<h1>공통 footer부분</h1>
			</footer>

		3) /layout.jsp -> 모듈을 꽂아넣을 jsp
			<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles" %> // pom.xml에 tiles추가 후 사용 가능.
			
			<body>
				<!-- header부분-->
				<tiles:insertAttribute name="header" /> //header라는 이름의 속성을 tiles 지시서에서 찾아와 꽂아넣음. 
				<!-- main 부분 -->
				<tiles:insertAttribute name="body" />
				<!-- footer 부분 -->
				<tiles:insertAttribute name="footer" />
			</body>
			
(2) index.jsp 

	