스프링 시큐리티와 OAuth2.0으로 로그인 기능 구현하기

1. 네이버 로그인
	(1) 네이버 API등록
		- 로그인 오픈 API 서비스 환경: PC웹
			서비스URL: http://localhost8088/ (로컬 호스트 주소)
			네아로 Callback url: http://localhost8088/login/oauth2/code/naver (리디렉션 url)
	(2) 키 값을 application-oauth.properties에 등록
		코드)
		#네이버 로그인 연동 - 네이버에서는 스프링 시큐리티를 공식 지원하지 않기 때문에 수동으로 입력.
		#registration
		spring.security.oauth2.client.registration.naver.client-id=id값 입력!
		spring.security.oauth2.client.registration.naver.client-secret=secret값 입력!
		spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
		spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
		spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
		spring.security.oauth2.client.registration.naver.client-name=naver
		#provider
		spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
		spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
		spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
		spring.security.oauth2.client.provider.naver.user-name-attribute=response
	(3) 스프링 시큐리티 설정 등록
		- OAuthAttributes class 에 네이버 로그인 관련 코드 추가.
		코드)
		//사용자 정보를 반환.
    		public static OAuthAttributes of(String registrationId, String userNameAttributeName, Map<String, Object> attributes) {
        			if("naver".equals(registrationId)) { //네이버로 로그인인지 확인
            				return ofNaver("id", attributes);
        			}
			return ofGoogle(userNameAttributeName, attributes); //구글 로그인 정보 반환
		}
		
		private static OAuthAttributes ofNaver(String userNameAttributeName, Map<String, Object> attributes) {
        			Map<String, Object> response = (Map<String, Object>) attributes.get("response");

        			return OAuthAttributes.builder()
                			.name((String) response.get("name"))
                			.email((String) response.get("email"))
               			.picture((String) response.get("profile_image"))
                			.attributes(response)
                			.nameAttributeKey(userNameAttributeName)
                			.build();
    			}
		}
	(4) view에 네이버 로그인 버튼 추가
		{{^userName}} <!-- false 일때 즉 userName이 없다면 로그인 버튼 노출되도록 -->
                		<a href="/oauth2/authorization/google" class="btn btn-success active" role="button">Google Login</a> <!-- /oauth2/authorization/google은 스프링 시큐리티에서 기본적으로 제공하는 로그인 url -->
                		<a href="/oauth2/authorization/naver" class="btn btn-secondary active" role="button">Naver Login</a>
            		{{/userName}}